{{ $global := . }}
  {{- range $i, $v := .Values.storageArrayList }}
  {{- range $j, $p := $global.Values.storageClassProtocols }}
  {{- if eq $p.protocol "FC"}}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  {{- if $v.isDefaultArray }}
    storageclass.beta.kubernetes.io/is-default-class: {{ $v.isDefaultArray | quote }}
  name: "unity"
  {{ else }}
  name: {{ "unity" }}-{{ $v.name | lower }}-{{ "fc" }}
  {{- end }}
provisioner: csi-unity.dellemc.com
reclaimPolicy: {{ $v.storageClass.reclaimPolicy | default $global.Values.storageClass.reclaimPolicy | quote  }}
allowVolumeExpansion: true
parameters:
  protocol: FC
  arrayId: {{ required "Must provide a arrayId" $v.name | quote }}
  storagePool: {{ required "Must provide a storagePool" $v.storageClass.storagePool | quote }}
  FsType: {{ $v.storageClass.FsType | default $global.Values.storageClass.FsType | lower | quote}}
  thinProvisioned: {{ $v.storageClass.thinProvisioned | default $global.Values.storageClass.thinProvisioned | quote }}
  isDataReductionEnabled: {{ $v.storageClass.isDataReductionEnabled | default $global.Values.storageClass.isDataReductionEnabled |  quote }}
  tieringPolicy: {{ $v.storageClass.tieringPolicy | default $global.Values.storageClass.tieringPolicy | quote }}
  hostIOLimitName: {{ $v.storageClass.hostIOLimitName | default $global.Values.storageClass.hostIOLimitName | quote }}
  {{ if eq $.Values.createStorageClassesWithTopology true }}
volumeBindingMode: WaitForFirstConsumer
allowedTopologies:
  - matchLabelExpressions:
      - key: csi-unity.dellemc.com/{{ required "Must provide a arrayId" $v.name | lower }}-fc
        values:
          - "true"
  {{- end }}
---
  {{- end }}
  {{- if eq $p.protocol "iSCSI"}}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  {{- if $v.isDefaultArray }}
  name: "unity-iscsi"
  {{ else }}
  name: {{ "unity" }}-{{ $v.name | lower }}-{{ "iscsi" }}
  {{- end }}
provisioner: csi-unity.dellemc.com
reclaimPolicy: {{ $v.storageClass.reclaimPolicy | default $global.Values.storageClass.reclaimPolicy | quote  }}
allowVolumeExpansion: true
parameters:
  protocol: iSCSI
  arrayId: {{ required "Must provide a arrayId" $v.name | quote }}
  storagePool: {{ required "Must provide a storagePool" $v.storageClass.storagePool | quote }}
  FsType: {{ $v.storageClass.FsType | default $global.Values.storageClass.FsType | lower | quote}}
  thinProvisioned: {{ $v.storageClass.thinProvisioned | default $global.Values.storageClass.thinProvisioned | quote }}
  isDataReductionEnabled: {{ $v.storageClass.isDataReductionEnabled | default $global.Values.storageClass.isDataReductionEnabled |  quote }}
  tieringPolicy: {{ $v.storageClass.tieringPolicy | default $global.Values.storageClass.tieringPolicy | quote }}
  hostIOLimitName: {{ $v.storageClass.hostIOLimitName | default $global.Values.storageClass.hostIOLimitName | quote }}
  {{ if eq $.Values.createStorageClassesWithTopology true }}
volumeBindingMode: WaitForFirstConsumer
allowedTopologies:
  - matchLabelExpressions:
      - key: csi-unity.dellemc.com/{{ required "Must provide a arrayId" $v.name | lower }}-iscsi
        values:
          - "true"
  {{- end }}
---
  {{- end }}
  {{- if eq $p.protocol "NFS"}}
  {{- if $v.storageClass.nasServer }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    "helm.sh/resource-policy": keep
  {{- if $v.isDefaultArray }}
  name: "unity-nfs"
  {{ else }}
  name: {{ "unity" }}-{{ $v.name | lower }}-nfs
  {{- end }}
provisioner: csi-unity.dellemc.com
reclaimPolicy: {{ $v.storageClass.reclaimPolicy | default $global.Values.storageClass.reclaimPolicy | quote  }}
allowVolumeExpansion: true
parameters:
  protocol: NFS
  arrayId: {{ required "Must provide a arrayId" $v.name | quote }}
  storagePool: {{ required "Must provide a storagePool" $v.storageClass.storagePool | quote }}
  thinProvisioned: {{ $v.storageClass.thinProvisioned | default $global.Values.storageClass.thinProvisioned | quote }}
  isDataReductionEnabled: {{ $v.storageClass.isDataReductionEnabled | default $global.Values.storageClass.isDataReductionEnabled |  quote }}
  tieringPolicy: {{ $v.storageClass.tieringPolicy | default $global.Values.storageClass.tieringPolicy | quote }}
  nasServer: {{ $v.storageClass.nasServer | default $global.Values.storageClass.nasServer | quote }}
  hostIoSize: {{ $v.storageClass.hostIoSize | default $global.Values.storageClass.hostIoSize | lower | quote }}
  {{ if eq $.Values.createStorageClassesWithTopology true }}
volumeBindingMode: WaitForFirstConsumer
allowedTopologies:
  - matchLabelExpressions:
      - key: csi-unity.dellemc.com/{{ required "Must provide a arrayId" $v.name | lower }}-nfs
        values:
          - "true"
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
  {{- end }}
